

# A properly formed Git commit subject line should always be able to complete
# the following sentence:
#     * If applied, this commit <with your subject line here>
#
# ** Example:
# [type](optional scope): [subject]
#
# [optional body]
#
# [optional footer]

# ** Type
# Must be one of the following:
# * build - Changes that affect the build system or external dependencies (e.g: gulp, broccoli, npm)
# * ci - Changes to our CI configuration files and scripts (e.g.: GitHub, BrowserStack)
# * docs - Documentation only changes
# * feat - A new feature
# * fix - A bug fix
# * perf - A code change that improves performance
# * refactor - A code change that neither fixes a bug or adds a feature
# * revert - Reverting things
# * style - Markup, white-space, formatting, missing semi-colons...
# * test - Adding missing tests or correcting existing tests

# ** Scope
# A scope may be provided to a commitâ€™s type, to provide additional contextual
# information and is contained within parenthesis, e.g., feat(parser): add
# ability to parse arrays.

# ** Subject
# The subject contains a succinct description of the change:
# * Use the imperative, present tense: "change" not "changed" nor "changes"
# * No dot (.) at the end.

# ** Body
# Just as in the subject, use the imperative, present tense: "change"
# not "changed" nor "changes". The body should include the motivation for
# the change and contrast this with previous behavior.

# ** Footer
# may contain a BREAKING CHANGE: < description >
# or information in a convention similar to the one used by git-trailer:
# Fix #42
# See-also: fe3187489d69c4 (subject of related commit)
# Signed-off-by: Alice <alice@example.com>
#
# ** Rules
# The 7 rules of a great commit message
#    1. Separate subject from body with a blank line
#    2. Limit the subject line to 50 characters
#    3. Summary in present tense. Not capitalized
#    4. Do not end the subject line with a period
#    5. Use the imperative mood in the subject line
#    6. Wrap the body at 72 characters
#    7. Use the body to explain what and why vs. how
